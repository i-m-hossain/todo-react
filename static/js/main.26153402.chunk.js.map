{"version":3,"sources":["Component/AddTodo.js","Component/TodoEdit.js","Component/Todo.js","Component/ShowAddTodo.js","Component/Home.js","App.js","reportWebVitals.js","index.js"],"names":["AddTodo","addTask","useState","name","setName","onSubmit","e","preventDefault","style","padding","width","margin","type","placeholder","onChange","target","value","TodoEdit","todo","setEditing","updateTodo","todoName","setTodoName","textAlign","color","fontWeight","id","defaultValue","display","borderRadius","backgroundColor","marginLeft","border","onClick","Todo","handleDelete","toggleComplete","handleFavourite","editing","className","defaultChecked","isCompleted","textDecoration","ShowAddTodo","todos","map","Home","setTodos","length","newTodo","Math","floor","random","Swal","fire","title","text","icon","showCancelButton","confirmButtonText","cancelButtonText","reverseButtons","then","result","isConfirmed","remainingTodo","filter","updatedTodo","copyTodos","find","item","index","indexOf","unshift","splice","App","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.26153402.chunk.js","sourcesContent":["import React, { useState } from 'react';\r\nimport './styles/addTodo.css'\r\n\r\n\r\nconst AddTodo = ({ addTask }) => {\r\n    const [name, setName] = useState('')\r\n\r\n    const handleOnChange = (e) => {\r\n        setName(e.target.value)\r\n    }\r\n\r\n    const handleOnSubmit = (e) => {\r\n        e.preventDefault()\r\n        addTask(name)\r\n        setName(\"\")\r\n    }\r\n\r\n    return (\r\n        <div>\r\n            <form onSubmit={handleOnSubmit} style={{ padding: \"20px\", width: \"50%\", margin: '0 auto' }}>\r\n                <input\r\n                    type=\"text\"\r\n                    placeholder=\"Add to do\"\r\n                    onChange={handleOnChange}\r\n                    value={name}\r\n                />\r\n                <button type=\"submit\">Add</button>\r\n            </form>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default AddTodo;","import React, { useState } from 'react';\r\n\r\nconst TodoEdit = ({ todo, setEditing, updateTodo }) => {\r\n    const [todoName, setTodoName] = useState('')\r\n    const handleOnChange = (e) => {\r\n        setTodoName(e.target.value)\r\n    }\r\n    const handleSubmit = (e) => {\r\n        e.preventDefault()\r\n        updateTodo(todoName, todo.id)\r\n        setEditing(false)\r\n\r\n    }\r\n    return (\r\n        <div style={{ textAlign: 'left' }}>\r\n            <p>New name for <span style={{ color: 'chocolate', fontWeight: \"700\" }}>{todo.name}</span></p>\r\n            <form style={{ margin: '0 auto' }} onSubmit={handleSubmit}>\r\n                <input\r\n                    type=\"text\"\r\n                    defaultValue={todo.name}\r\n                    onChange={handleOnChange}\r\n\r\n                />\r\n                <div style={{ display: 'flex', }}>\r\n\r\n                    <button\r\n                        type=\"submit\"\r\n                        style={{\r\n\r\n                            borderRadius: \"0\",\r\n                            backgroundColor: \"black\"\r\n                        }}\r\n                    >\r\n                        Update\r\n                    </button>\r\n                    <button\r\n                        type=\"submit\"\r\n                        style={{\r\n                            marginLeft: '10px',\r\n                            border: \"1px solid black\",\r\n                            borderRadius: \"0\",\r\n                            backgroundColor: 'white',\r\n                            color: \"black\", fontWeight: \"700\"\r\n                        }}\r\n                        onClick={() => setEditing(false)}\r\n                    >\r\n                        Cancel\r\n                    </button>\r\n                </div>\r\n\r\n            </form>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default TodoEdit;","import React, { useState } from 'react';\r\nimport './styles/todo.css'\r\nimport { FiEdit } from 'react-icons/fi'\r\nimport { RiDeleteBin6Line } from 'react-icons/ri'\r\nimport TodoEdit from './TodoEdit';\r\nimport { AiOutlineStar } from 'react-icons/ai'\r\n\r\nconst Todo = ({ todo, handleDelete, toggleComplete, updateTodo, handleFavourite }) => {\r\n    const [editing, setEditing] = useState(false)\r\n    const handleEdit = () => {\r\n        setEditing(!editing)\r\n    }\r\n    const handleSorting = (id) => {\r\n        handleFavourite(id)\r\n\r\n    }\r\n    return (\r\n        <div className=\"container\">\r\n            <div\r\n                className=\"todo-container\"\r\n\r\n            >\r\n                <div className=\"todo-container\">\r\n                    <input\r\n                        type=\"checkbox\"\r\n                        defaultChecked={todo.isCompleted}\r\n                        onClick={() => { toggleComplete(todo.id) }}\r\n                    />\r\n                    <span\r\n                        style={{\r\n                            textDecoration: todo.isCompleted ? 'line-through' : 'none'\r\n                        }}\r\n                        className=\"title\">\r\n                        {todo.name}\r\n                    </span>\r\n                </div>\r\n                <div>\r\n                    <FiEdit\r\n                        className=\"edit\"\r\n                        onClick={handleEdit}\r\n                    ></FiEdit>\r\n                    <RiDeleteBin6Line\r\n                        className=\"delete\"\r\n                        style={{ marginLeft: '30px' }}\r\n                        onClick={() => { handleDelete(todo.id) }}\r\n                    ></RiDeleteBin6Line>\r\n                    <AiOutlineStar\r\n                        style={{ marginLeft: '30px' }}\r\n                        onClick={() => handleSorting(todo.id)}\r\n                    ></AiOutlineStar>\r\n                </div>\r\n            </div>\r\n            <div>\r\n                {\r\n                    editing && <TodoEdit\r\n                        todo={todo}\r\n                        setEditing={setEditing}\r\n                        updateTodo={updateTodo}\r\n                    ></TodoEdit>\r\n                }\r\n            </div>\r\n\r\n        </div >\r\n    );\r\n};\r\n\r\nexport default Todo;","import React from 'react';\r\nimport Todo from './Todo';\r\n\r\nconst ShowAddTodo = ({ todos, handleDelete, toggleComplete, updateTodo, handleFavourite }) => {\r\n\r\n    return (\r\n        <div>\r\n            {\r\n                todos.map(todo => <Todo\r\n\r\n                    key={todo.id}\r\n                    todo={todo}\r\n                    handleDelete={handleDelete}\r\n                    toggleComplete={toggleComplete}\r\n                    updateTodo={updateTodo}\r\n                    handleFavourite={handleFavourite}\r\n                    todos={todos}\r\n                ></Todo>)\r\n            }\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default ShowAddTodo;","import React, { useState } from 'react';\r\nimport AddTodo from './AddTodo';\r\nimport ShowAddTodo from './ShowAddTodo';\r\nimport Swal from 'sweetalert2'\r\n\r\n\r\nconst Home = () => {\r\n    const [todos, setTodos] = useState([])\r\n    const addTask = (name) => {\r\n        if (!name.length > 0) {\r\n            return ''\r\n        }\r\n        const newTodo = {\r\n            id: Math.floor(Math.random() * 10000),\r\n            name: name,\r\n            isCompleted: false\r\n        }\r\n        setTodos([...todos, newTodo])\r\n    }\r\n    const handleDelete = (id) => {\r\n        Swal.fire({\r\n            title: 'Are you sure?',\r\n            text: \"You won't be able to revert this!\",\r\n            icon: 'warning',\r\n            showCancelButton: true,\r\n            confirmButtonText: 'Yes, delete it!',\r\n            cancelButtonText: 'No, cancel!',\r\n            reverseButtons: true\r\n\r\n        }).then(result => {\r\n            if (result.isConfirmed) {\r\n                const remainingTodo = todos.filter(todo => todo.id !== id)\r\n                setTodos(remainingTodo)\r\n                Swal.fire(\r\n                    'Deleted!',\r\n                    'Your file has been deleted.',\r\n                    'success'\r\n                )\r\n            } else {\r\n                Swal.fire(\r\n                    'Cancelled',\r\n                    'Data is safe :)',\r\n                    'error'\r\n                )\r\n            }\r\n        })\r\n\r\n\r\n    }\r\n\r\n    const toggleComplete = (id) => {\r\n        const updatedTodo = todos.map(todo => {\r\n            if (todo.id === id) {\r\n                return { ...todo, isCompleted: !todo.isCompleted }\r\n            }\r\n            return todo;\r\n        })\r\n        setTodos(updatedTodo)\r\n\r\n    }\r\n    const updateTodo = (name, id) => {\r\n        const updateTodo = todos.map(todo => {\r\n            if (todo.id === id) {\r\n                return { ...todo, name: name }\r\n            }\r\n            return todo;\r\n        })\r\n        setTodos(updateTodo)\r\n    }\r\n    const handleFavourite = (id) => {\r\n        const copyTodos = [...todos]\r\n        const todo = copyTodos.find(item => item.id === id)\r\n        const index = copyTodos.indexOf(todo)\r\n        copyTodos.unshift(copyTodos.splice(index, 1)[0]);\r\n        setTodos(copyTodos)\r\n    }\r\n    return (\r\n        <div>\r\n            <h2>What needs to be done?</h2>\r\n            <AddTodo addTask={addTask}></AddTodo>\r\n            <ShowAddTodo\r\n                todos={todos}\r\n                handleDelete={handleDelete}\r\n                toggleComplete={toggleComplete}\r\n                updateTodo={updateTodo}\r\n                handleFavourite={handleFavourite}\r\n            ></ShowAddTodo>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default Home;","import './App.css';\nimport Home from './Component/Home';\n// import {BrowserRouter, Routes, Route} from 'react-router-dom'\n\nfunction App() {\n  return (\n    <div className=\"App \">\n      <Home></Home>\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}